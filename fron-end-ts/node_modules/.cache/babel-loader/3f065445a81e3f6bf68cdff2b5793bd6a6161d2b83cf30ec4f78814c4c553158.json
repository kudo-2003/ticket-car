{"ast":null,"code":"var _jsxFileName = \"E:\\\\ticket-car\\\\fron-end-ts\\\\src\\\\pages\\\\Auth\\\\ForgotPassword.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./auth_css/ForgotPassword.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8080/auth/forgot-password\", {\n        email: email\n      });\n      if (response.status === 200) {\n        alert(\"Password reset link has been sent to your email.\");\n        navigate(\"/signin\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error(\"Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      alert(`Failed to send reset link: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Unknown error\"}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleForgotPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => navigate(\"/auth\"),\n          children: \"Back to Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"BtHh1nUgD6Q6OqHFh/Muz7TKLH4=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["useState","useNavigate","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","navigate","handleForgotPassword","e","preventDefault","response","post","status","alert","error","_error$response","_error$response$data","_error$response2","_error$response2$data","console","data","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","href","onClick","_c","$RefreshReg$"],"sources":["E:/ticket-car/fron-end-ts/src/pages/Auth/ForgotPassword.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./auth_css/ForgotPassword.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport function ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleForgotPassword = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:8080/auth/forgot-password\", {\r\n        email: email,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert(\"Password reset link has been sent to your email.\");\r\n        navigate(\"/signin\");\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"Error:\", error.response?.data?.message || error.message);\r\n      alert(`Failed to send reset link: ${error.response?.data?.message || \"Unknown error\"}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-page\">\r\n      <div className=\"forgot-password-container\">\r\n        <form onSubmit={handleForgotPassword}>\r\n          <h1>Forgot Password</h1>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Send Reset Link</button>\r\n          <a href=\"#\" onClick={() => navigate(\"/auth\")}>\r\n            Back to Sign In\r\n          </a>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}