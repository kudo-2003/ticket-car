{"ast":null,"code":"var _jsxFileName = \"E:\\\\ticket-car\\\\fron-end-ts\\\\src\\\\pages\\\\Auth\\\\ResetPassword.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./auth_css/ResetPassword.css\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ResetPassword() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\"); // Lấy token từ URL\n\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://127.0.0.1:8080/auth/reset-password?token=${token}`, {\n        password\n      });\n      if (response.status === 200) {\n        alert(\"Password has been successfully reset.\");\n        navigate(\"/auth\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error(\"Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      alert(`Failed to reset password: ${((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Unknown error\"}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: () => navigate(\"/signin\"),\n          children: \"Back to Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"mSDplFMpfv5sPVIfCPJV+MqtWGM=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useNavigate","useSearchParams","axios","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","searchParams","token","get","handleResetPassword","e","preventDefault","response","post","status","alert","_error$response","_error$response$data","_error$response2","_error$response2$data","console","data","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","href","onClick","_c","$RefreshReg$"],"sources":["E:/ticket-car/fron-end-ts/src/pages/Auth/ResetPassword.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./auth_css/ResetPassword.css\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport function ResetPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get(\"token\"); // Lấy token từ URL\r\n\r\n  const handleResetPassword = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `http://127.0.0.1:8080/auth/reset-password?token=${token}`,\r\n        { password }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        alert(\"Password has been successfully reset.\");\r\n        navigate(\"/auth\");\r\n      }\r\n    } catch (error: any) {\r\n      console.error(\"Error:\", error.response?.data?.message || error.message);\r\n      alert(`Failed to reset password: ${error.response?.data?.message || \"Unknown error\"}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-page\">\r\n      <div className=\"reset-password-container\">\r\n        <form onSubmit={handleResetPassword}>\r\n          <h1>Reset Password</h1>\r\n          {error && <p className=\"error-message\">{error}</p>}\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm new password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Reset Password</button>\r\n          <a href=\"#\" onClick={() => navigate(\"/signin\")}>\r\n            Back to Sign In\r\n          </a>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}